docker {

  postgres {
    image-name = "postgres:9.4.4"
    environmental-variables = ["POSTGRES_USER=nph", "POSTGRES_PASSWORD=suitup"]
    ready-checker {
      log-line = "database system is ready to accept connections"
    }
    port-maps {
      default-postgres-port {
        internal = 5432
      }
    }
  }

  zookeeper {
    image-name = "jplock/zookeeper:3.4.6"
    ready-checker {
      log-line = "binding to port"
    }
    port-maps {
      default-zookeeper-port {
        internal = 2181
      }
    }
  }

  cassandra {
    image-name = "whisk/cassandra:2.1.8"
    ready-checker {
      log-line = "Starting listening for CQL clients on"
    }
    port-maps {
      default-cql-port {
        internal = 9042
      }
    }
    volume-maps = [
      {
        container = "/opt/data"
        host = "/opt/docker/data"
      },
      {
        container = "/opt/log"
        host = "/opt/docker/log"
        rw = true
      }
    ]
  }

  mongodb {
    image-name = "mongo:3.0.6"
    command = ["mongod", "--nojournal", "--smallfiles", "--syncdelay", "0"]
    ready-checker {
      log-line = "waiting for connections on port"
    }
    port-maps {
      default-mongodb-port {
        internal = 27017
      }
    }
  }

  neo4j {
    image-name = "whisk/neo4j:2.1.8"
    ready-checker {
      http-response-code {
        port = 7474
        path = "/db/data/"
        within = 100
        looped {
          attempts = 20
          delay = 1250
        }
      }
    }
    port-maps {
      default-neo4j-port {
        internal = 7474
      }
    }
  }

  elasticsearch {
    image-name = "elasticsearch:1.7.1"
    entrypoint = [ "my", "custom", "entrypoint" ]
    memory = 536870912 # 512MB
    memory-reservation = 268435456 # 256MB
    ready-checker {
      http-response-code {
        port = 9200
        path = "/"
        within = 100
        looped {
          attempts = 20
          delay = 1250
        }
      }
    }
    port-maps {
      default-elasticsearch-http-port {
        internal = 9200
      }
      default-elasticsearch-client-port {
        internal = 9300
      }
    }
    extra-hosts = ["example:1.2.3.4"]
  }

  kafka {
    image-name = "wurstmeister/kafka:0.8.2.1"
    environmental-variables = ["KAFKA_ADVERTISED_PORT=9092", KAFKA_ADVERTISED_HOST_NAME"="${?DOCKER_IP}]
    ready-checker {
      log-line = "started (kafka.server.KafkaServer)"
    }
    port-maps {
      default-kafka-port {
        internal = 9092
        external = 9092
      }
    }
  }
}
